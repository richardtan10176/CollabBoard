AWSTemplateFormatVersion: '2010-09-09'
Description: 'CollabBoard AWS Infrastructure - EC2, Security Groups, and IAM'

Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  
  InstanceType:
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - m5.large
      - m5.xlarge
    Description: EC2 instance type for CollabBoard
  
  DomainName:
    Type: String
    Description: Domain name for the application (e.g., yourdomain.com)
    Default: ''
  
  AllowedSSHCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed to SSH to the instance
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'

Resources:
  # Security Group for CollabBoard
  CollabBoardSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for CollabBoard application
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedSSHCIDR
          Description: SSH access
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access
      Tags:
        - Key: Name
          Value: CollabBoard-SecurityGroup

  # IAM Role for EC2 instance
  CollabBoardInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Name
          Value: CollabBoard-InstanceRole

  # Instance Profile
  CollabBoardInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref CollabBoardInstanceRole

  # EC2 Instance
  CollabBoardInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316  # Ubuntu Server 20.04 LTS (HVM), SSD Volume Type
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref CollabBoardSecurityGroup
      IamInstanceProfile: !Ref CollabBoardInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update
          apt-get install -y awscli
          
          # Create ubuntu user if it doesn't exist
          if ! id "ubuntu" &>/dev/null; then
            useradd -m -s /bin/bash ubuntu
            usermod -aG sudo ubuntu
          fi
          
          # Set up the application directory
          mkdir -p /home/ubuntu/CollabBoard
          chown ubuntu:ubuntu /home/ubuntu/CollabBoard
          
          # Install CloudWatch agent
          wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
          dpkg -i amazon-cloudwatch-agent.deb
          
          # Create CloudWatch config
          cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json << 'EOF'
          {
            "metrics": {
              "namespace": "CollabBoard",
              "metrics_collected": {
                "cpu": {
                  "measurement": ["cpu_usage_idle", "cpu_usage_iowait", "cpu_usage_user", "cpu_usage_system"],
                  "metrics_collection_interval": 60
                },
                "disk": {
                  "measurement": ["used_percent"],
                  "metrics_collection_interval": 60,
                  "resources": ["*"]
                },
                "mem": {
                  "measurement": ["mem_used_percent"],
                  "metrics_collection_interval": 60
                }
              }
            },
            "logs": {
              "logs_collected": {
                "files": {
                  "collect_list": [
                    {
                      "file_path": "/var/log/syslog",
                      "log_group_name": "CollabBoard/System",
                      "log_stream_name": "{instance_id}/syslog"
                    }
                  ]
                }
              }
            }
          }
          EOF
          
          # Start CloudWatch agent
          /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \
            -a fetch-config \
            -m ec2 \
            -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json \
            -s
          
          # Signal CloudFormation that the instance is ready
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource CollabBoardInstance --region ${AWS::Region}
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 20
            VolumeType: gp3
            DeleteOnTermination: true
            Encrypted: true
      Tags:
        - Key: Name
          Value: CollabBoard-Instance
        - Key: Application
          Value: CollabBoard

  # Elastic IP (optional)
  CollabBoardElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref CollabBoardInstance
      Tags:
        - Key: Name
          Value: CollabBoard-ElasticIP

  # CloudWatch Log Groups
  CollabBoardSystemLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: CollabBoard/System
      RetentionInDays: 14

  CollabBoardApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: CollabBoard/Application
      RetentionInDays: 7

Outputs:
  InstanceId:
    Description: Instance ID of the CollabBoard EC2 instance
    Value: !Ref CollabBoardInstance
    Export:
      Name: !Sub ${AWS::StackName}-InstanceId

  PublicIP:
    Description: Public IP address of the CollabBoard instance
    Value: !Ref CollabBoardElasticIP
    Export:
      Name: !Sub ${AWS::StackName}-PublicIP

  PublicDNS:
    Description: Public DNS name of the CollabBoard instance
    Value: !GetAtt CollabBoardInstance.PublicDnsName
    Export:
      Name: !Sub ${AWS::StackName}-PublicDNS

  SecurityGroupId:
    Description: Security Group ID for CollabBoard
    Value: !Ref CollabBoardSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupId

  SSHCommand:
    Description: SSH command to connect to the instance
    Value: !Sub 'ssh -i ${KeyPairName}.pem ubuntu@${CollabBoardElasticIP}'

  ApplicationURL:
    Description: URL to access the CollabBoard application
    Value: !Sub 'http://${CollabBoardElasticIP}'
    Condition: HasDomainName

  ApplicationHTTPSURL:
    Description: HTTPS URL to access the CollabBoard application
    Value: !Sub 'https://${DomainName}'
    Condition: HasDomainName

Conditions:
  HasDomainName: !Not [!Equals [!Ref DomainName, '']]
